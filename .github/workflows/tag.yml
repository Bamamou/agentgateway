name: Tag and Push 

on:
  push:
    tags:
    - "v*.*.*"
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'

jobs:
  push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@main

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build
      env:
        DOCKER_BUILD_ARGS: "--push"
        DOCKER_BUILDER: "docker buildx"
      run: |
        # if workflow_dispatch is used, use the version input
        if [ -n "${{ github.event.inputs.version }}" ]; then
          export VERSION=${{ github.event.inputs.version }}
        else
          export VERSION=$(echo "$GITHUB_REF" | cut -c12-)
        fi
        make docker
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Install Protoc
      uses: arduino/setup-protoc@v3
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Build
      run: make build
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: mcp-gw-${{ matrix.os }}
        path: target/release/mcp-gw
  release:
    needs:
    - push-image
    - build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
    - name: Display structure of downloaded files
      run: ls -R
    - name: Checkout
      uses: actions/checkout@v4
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: mcp-gw-*/mcp-gw-*
        tag_name: ${{ github.ref_name }}
        body: "Automated release of ${{ github.ref_name }}."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: startsWith(github.ref, 'refs/tags/')